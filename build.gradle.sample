buildscript {
	ext {
      springBootVersion = '2.7.10'
   }
   repositories {
      mavenCentral()
   }
   dependencies {
   	  classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
      classpath('se.transmode.gradle:gradle-docker:1.2')
   }
}



plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.notification-wrapper'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

apply plugin: 'docker'

task buildDocker(type: Docker, dependsOn: build) {
   applicationName = jar.baseName
   dockerfile = file('Dockerfile')
   doFirst {
      copy {
         from jar
         into stageDir
      }
   }
}

jar{
    archiveClassifier=''
    enabled = false
	manifest {
        attributes(
                'Main-Class': 'com.template.NotificationApplication'
        )
    }
}


repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
//	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
//    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'org.postgresql:postgresql:42.2.23'
    implementation 'com.jayway.jsonpath:json-path:2.6.0'
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'com.twilio.sdk:twilio:9.2.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'



    implementation platform('software.amazon.awssdk:bom:2.5.29') // BOM for AWS SDK For Java
    implementation 'software.amazon.awssdk:sns' // We only need to get SNS SDK in our case
    compile group: 'org.springframework.cloud', name: 'spring-cloud-aws-messaging', version: '2.2.1.RELEASE'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-aws-autoconfigure', version: '2.2.1.RELEASE'

//Swagger
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.14'

    //Micrometer dependency
    implementation "io.micrometer:micrometer-tracing-bridge-brave:+"

    runtimeOnly "io.micrometer:micrometer-registry-prometheus:+"

    implementation 'io.micrometer:micrometer-observation:1.10.0'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-aop
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'


    //Logging
    // https://mvnrepository.com/artifact/commons-logging/commons-logging
    implementation group: 'commons-logging', name: 'commons-logging', version: '1.2'

    implementation 'org.springframework.boot:spring-boot-starter-mail:2.7.4'

    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'org.apache.tika:tika-core:2.7.0'
}

//tasks.named('test') {
//	useJUnitPlatform()
//}
